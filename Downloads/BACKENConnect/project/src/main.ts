import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  
  // Activation de la validation globale
  app.useGlobalPipes(new ValidationPipe({
    whitelist: true,
    forbidNonWhitelisted: true,
    transform: true,
    transformOptions: {
      enableImplicitConversion: true,
    },
  }));
  
  // Configuration Swagger am√©lior√©e
  const config = new DocumentBuilder()
    .setTitle('FoiConnectee - Bible App API')
    .setDescription(`
      # API Documentation pour FoiConnectee
      
      ## Description
      API backend compl√®te pour l'application de lecture biblique FoiConnectee.
      
      ## Fonctionnalit√©s
      - üîê **Authentification** : Inscription, connexion et gestion des sessions
      - üë• **Gestion des utilisateurs** : Profils, r√¥les et permissions
      - üìñ **Contenu biblique** : Livres, chapitres et versets
      - üìù **Fonctionnalit√©s personnelles** : Notes, surlignages et favoris
      - üìö **Plans de lecture** : Cr√©ation et suivi de plans personnalis√©s
      - üí¨ **Interactions sociales** : Commentaires, r√©actions et t√©moignages
      
      ## Authentification
      Toutes les routes prot√©g√©es n√©cessitent un token JWT valide dans le header Authorization.
      
      ## Codes de r√©ponse
      - **200** : Succ√®s
      - **201** : Cr√©√© avec succ√®s
      - **400** : Requ√™te invalide
      - **401** : Non authentifi√©
      - **403** : Acc√®s refus√©
      - **404** : Ressource non trouv√©e
      - **500** : Erreur interne du serveur
    `)
    .setVersion('1.0.0')
    .setContact('FoiConnectee Team', 'https://foiconnectee.com', 'contact@foiconnectee.com')
    .setLicense('MIT', 'https://opensource.org/licenses/MIT')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'JWT',
        description: 'Entrez votre token JWT',
        in: 'header',
      },
      'JWT-auth',
    )
    .addTag('Authentication', 'Endpoints pour l\'inscription et la connexion')
    .addTag('Users Management', 'Gestion des utilisateurs et profils')
    .addTag('Bible Content', 'Contenu biblique et recherche')
    .addTag('Reading Plans', 'Plans de lecture personnalis√©s')
    .addTag('Personal Features', 'Notes, surlignages et favoris')
    .addTag('Social Features', 'Commentaires, r√©actions et t√©moignages')
    .build();
  
  const document = SwaggerModule.createDocument(app, config);
  
  // Configuration de l'interface Swagger
  SwaggerModule.setup('api', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      docExpansion: 'list',
      filter: true,
      showRequestDuration: true,
      tryItOutEnabled: true,
    },
    customSiteTitle: 'FoiConnectee API Documentation',
    customCss: `
      .swagger-ui .topbar { display: none }
      .swagger-ui .info .title { color: #2c3e50; font-size: 36px; }
      .swagger-ui .info .description { font-size: 16px; line-height: 1.6; }
    `,
  });

  // Pr√©fixe global pour les routes
  app.setGlobalPrefix('api/v1');
  
  // Activation CORS
  app.enableCors({
    origin: process.env.ALLOWED_ORIGINS?.split(',') || ['http://localhost:3000'],
    methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'],
    allowedHeaders: ['Content-Type', 'Authorization'],
    credentials: true,
  });
  
  await app.listen(9200);
  
  console.log('üöÄ FoiConnectee API d√©marr√©e sur le port 9200');
  console.log('üìö Documentation Swagger disponible sur: http://localhost:9200/api');
}
bootstrap();